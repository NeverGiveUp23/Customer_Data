name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**' # -> this means that this workflow will be triggered only if there is a change in the backend folder

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.2
        env:
          POSTGRES_USER: felix
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer # -> this is the name of the database
        ports:
          - 5332:5432
        options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    defaults:
      run:
        working-directory: ./backend


    steps:
      - uses: actions/checkout@v3 # -> this step will checkout the code
      - name: Slack commit message and sha
        run: >
            curl -X POST -H 'Content-type: application/json'
            --data '{"text":":github: :alert: https://github.com/NeverGiveUp23/Customer_Data/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message
        run: >
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Starting deployment of backend :progress_bar: :good-luck:"}' ${{secrets.SLACK_WEBHOOK_URL}}

      - uses: actions/setup-java@v3
        with:
            distribution: 'temurin'
            java-version: '17'
            cache: 'maven'

      - name: Login to Docker Hub # -> this step will login to the docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Send Slack Login Successful Login Notification
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":"'"${DOCKERHUB_USERNAME}"' :docker: successfully logged in to Docker Hub"}' ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Send Slack Build Successful Notification
        run: >
            curl -X POST -H 'Content-type: application/json' --data '{"text":":maven: Building with Maven "}' ${{secrets.SLACK_WEBHOOK_URL}}


      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build

      - name: Send Slack Message
        run: >
            curl -X POST -H 'Content-type: application/json' 
            --data '{"text":":partydocker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to https://hub.docker.com/repository/docker/felixvjr23/customer-api"}' 
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
            echo "Dockerrun.aws.json before updating tag"
            cat ../Dockerrun.aws.json
            sed -i -E 's_(felixvjr23/customer-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
            echo "Dockerrun.aws.json after updating tag"
            cat ../Dockerrun.aws.json

      - name: Send Slack Build Successful Notification
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":":aws: Starting AWS Deployment"}' ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            application_name: ${{ secrets.EB_APPLICATION_NAME }}
            environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
            version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
            version_description: ${{ github.SHA }}
            region: ${{ secrets.EB_REGION }}
            deployment_package: Dockerrun.aws.json

      - name: Send Slack commit Notification
        env:
          EB_APPLICATION_NAME: ${{ secrets.EB_APPLICATION_NAME }}
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":":githubloading: :mild-panis-intensifies: Committing to https://github.com/NeverGiveUp23/Customer_Data/"}' ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Commit and push Dockerrun.aws.json
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add ../Dockerrun.aws.json
            git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
            git push

      - name: Send Slack Commit Successful Notification
        env:
          EB_ENVIRONMENT_NAME: ${{ secrets.EB_ENVIRONMENT_NAME }}
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment completed successfully :success: :partykeanu: - http://customerapi-env-1.eba-ecz5qwkm.us-east-2.elasticbeanstalk.com/"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message
        if: always()
        run: >
            curl -X POST -H 'Content-type: application/json' 
            --data '{"text":"Job Status ${{ job.status }}"}' 
            ${{ secrets.SLACK_WEBHOOK_URL }}