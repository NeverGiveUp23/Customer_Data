name: CD - Deploy React Frontend


on:
  workflow_dispatch:
    push:
        branches:
        - main
        paths:
        - 'frontend/client/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/client

    steps:
      - uses: actions/checkout@v3
      - name: Slack Commit Message and Sha
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":github: :alert: https://github.com/NeverGiveUp23/Customer_Data/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Starting deployment of frontend :progress_bar: :good-luck:"}' ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Login To Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and Publish
        run: |
          chmod +x ../ci/build-publish.sh
          USERNAME=felixvjr23 \
          REPO=customer-react-frontend \
          TAG=${{ steps.build-number.outputs.BUILD_NUMBER }} \
            ../ci/build-publish.sh . \
            --build-arg api_base_url=http://customerapi-env-1.eba-ecz5qwkm.us-east-2.elasticbeanstalk.com:8080

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
                    --data '{"text":":docker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to https://hub.docker.com/repository/docker/felixvjr23/customer-react-frontend"}' 
                    ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
          sed -i -E 's_(felixvjr23/customer-react-frontend:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../Dockerrun.aws.json

      - name: Deploy to AWS Elastic Beanstalk
        run: >
          curl -X POST -H 'Content-type: application/json' 
                    --data '{"text":":aws: :alert: Deploying to AWS Elastic Beanstalk :progress_bar: :good-luck:"}' 
                    ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v15
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 60


      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
                    --data '{"text":":aws: :alert: Deployment to AWS Elastic Beanstalk completed :good-luck:"}' 
                    ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Commit and Push new Dockerrun.aws.json
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add ../Dockerrun.aws.json
            git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
            git push
          

      - name: Send Slack Message
        run: >
            curl -X POST -H 'Content-type: application/json' 
                      --data '{"text":":github: :alert: Pushed new Dockerrun.aws.json to github"}' 
                      ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status ${{ job.status }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}